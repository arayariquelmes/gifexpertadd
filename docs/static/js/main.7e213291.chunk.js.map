{"version":3,"sources":["components/AgregarCategoria.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AgregarCategoria","setCategorias","useState","valorInput","setValorInput","onSubmit","e","preventDefault","trim","length","cats","type","onChange","target","value","getGifs","categoria","a","busqueda","encodeURI","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","useFetchGifs","imagenes","key","GifExpertApp","props","categorias","c","ReactDOM","render","document","getElementById"],"mappings":"oMAEaA,EAAmB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACbC,mBAAS,IADI,mBAC1CC,EAD0C,KAC9BC,EAD8B,KAYjD,OACI,sBAAMC,SARa,SAACC,GACrBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAId,SAEI,uBAAOO,KAAK,OACRC,SAdS,SAACN,GAClBF,EAAcE,EAAEO,OAAOC,QAcfA,MAAOX,O,sCCjBVY,EAAO,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,6DACbC,EAAWC,UAAUH,GACrBI,EAFa,iDAEmCF,EAFnC,kBADT,GACS,oBAFT,oCAES,SAGDG,MAAMD,GAHL,cAGbE,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVT,IAAG,UAACO,EAAIG,cAAL,aAAC,EAAYC,iBAAiBX,QATtB,kBAYZK,GAZY,4CAAH,sDCAPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAClC,OACI,sBAAKa,UAAU,+CAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,6BAAKA,QCDJO,EAAU,SAAC,GAAiB,IAAhBpB,EAAe,EAAfA,UAAe,ECFZ,SAACA,GAAa,IAAD,EACXd,mBAAS,CAC/BsB,KAAK,GACLa,SAAQ,IAHyB,mBAC9BC,EAD8B,KACvBC,EADuB,KAUrC,OALAC,oBAAS,sBAAC,sBAAAvB,EAAA,kEAEPsB,EAFO,SAEcxB,EAAQC,GAFtB,yBAEGQ,KAFH,KAEkCa,SAAQ,IAF1C,yDAGR,CAACrB,IAEIsB,EDLyBG,CAAazB,GAAjC0B,EAHwB,EAG7BlB,KAAca,EAHe,EAGfA,QAErB,OACI,qCACA,6BAAKrB,IACJqB,GAAU,2CACX,qBAAKJ,UAAU,YAAf,SAEMS,EAAShB,KAAI,SAAAC,GAAG,OAAE,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBgB,IAAKhB,EAAIC,eEkBhDgB,MA7Bf,SAAsBC,GAAO,MAKW3C,mBAAS,CAAC,cALrB,mBAKlB4C,EALkB,KAKN7C,EALM,KAOzB,OACI,qCACE,gDACA,cAAC,EAAD,CAAkBA,cAAeA,IACjC,uBACA,6BAEQ6C,EAAWpB,KAAI,SAACqB,GACZ,OAAO,cAAC,EAAD,CAEL/B,UAAW+B,GADNA,Y,MCf7BC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.7e213291.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\nexport const AgregarCategoria = ({setCategorias}) => {\n    const [valorInput, setValorInput] = useState('')\n    const cambiarValor = (e)=>{\n        setValorInput(e.target.value);\n    };\n    const manejarAgregar = (e)=>{\n       e.preventDefault();\n       if(valorInput.trim().length > 2){\n        setCategorias(cats=>[valorInput,...cats,])\n        setValorInput('');\n       }\n    };\n    return (\n        <form onSubmit={manejarAgregar}>\n         \n            <input type=\"text\"\n                onChange={cambiarValor}\n                value={valorInput} />\n        </form>\n    )\n};\n\nAgregarCategoria.propTypes = {\n    setCategorias: PropTypes.func.isRequired\n};","const API_KEY=\"PJaS1HplSyfVX8LrB11GYA4G9FMaN0Nd\";\nconst limit = 10;\nexport const getGifs = async (categoria)=>{\n    const busqueda = encodeURI(categoria);\n    const url = `https://api.giphy.com/v1/gifs/search?q=${busqueda}&limit=${limit}&api_key=${API_KEY}`;\n    const resp= await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map(img=>{\n        return {\n            id:img.id,\n            title:img.title,\n            url:img.images?.downsized_medium.url\n        }\n    });\n    return gifs;\n};","import React from 'react'\n\nexport const GifGridItem = ({id,title,url}) => {\n    return (\n        <div className=\"card animate__animated animate__bounceInLeft\">\n            <img src={url} alt={title} />\n            <h5>{title}</h5>\n        </div>\n    )\n}\n","import React from 'react'\nimport { getFCP } from 'web-vitals';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({categoria}) => {\n\n\n    const {data:imagenes,loading} = useFetchGifs(categoria);\n    \n    return (\n        <>\n        <h3>{categoria}</h3>\n        {loading&& <p>Cargando..</p>}\n        <div className=\"card-grid\">\n            \n            { imagenes.map(img=><GifGridItem {...img} key={img.id}></GifGridItem>)}\n            \n        </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (categoria)=>{\n    const [state, setState] = useState({\n        data:[],\n        loading:true\n    });\n    useEffect(async ()=>{\n    \n       setState({data:await getGifs(categoria), loading:false});\n    },[categoria])\n\n    return state;\n}","import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport { AgregarCategoria } from './components/AgregarCategoria'\nimport { GifGrid } from './components/GifGrid'\n\nfunction GifExpertApp(props) {\n    // const agregarCategoria = ()=>{\n    //     setCategorias([...categorias,'Pokemon']);\n    // };\n    //const categorias = ['One Punch', 'Samurai X', 'Dragon Ball']\n    const [categorias, setCategorias] = useState(['One Punch'])\n    //El key debe ser el id unico del elemento\n    return (\n        <>\n          <h2>Gif Expert App</h2> \n          <AgregarCategoria setCategorias={setCategorias} ></AgregarCategoria>\n          <hr />\n          <ol>\n              {\n                  categorias.map((c)=>{\n                      return <GifGrid\n                        key={c}\n                        categoria={c}></GifGrid>\n                  })\n              }\n          </ol>\n        </>\n    )\n}\n\nGifExpertApp.propTypes = {\n\n}\n\nexport default GifExpertApp\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n    <GifExpertApp />\n ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}